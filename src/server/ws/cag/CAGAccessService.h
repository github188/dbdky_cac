/* CAGAccessService.h
   Generated by wsdl2h 2.8.12 from ./CAGAccessService.wsdl and typemap.dat
   2013-09-10 01:04:48 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2012 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on CAGAccessService.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Use wsdl2h option -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2012, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://info.nari-china.com/CAG                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://info.nari-china.com/CAG"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://info.nari-china.com/CAG"
//gsoap ns1   schema namespace:	http://info.nari-china.com/CAG
//gsoap ns1   schema form:	qualified

#define SOAP_NAMESPACE_OF_ns1	"http://info.nari-china.com/CAG"
//gsoap ns1   schema namespace:	http://info.nari-china.com/CAG
//gsoap ns1   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class _ns1__uploadCACData.
class _ns1__uploadCACData;

//  Forward declaration of class _ns1__uploadCACDataResponse.
class _ns1__uploadCACDataResponse;

//  Forward declaration of class _ns1__downloadCACUpdateFile.
class _ns1__downloadCACUpdateFile;

//  Forward declaration of class _ns1__downloadCACUpdateFileResponse.
class _ns1__downloadCACUpdateFileResponse;

//  Forward declaration of class _ns1__downloadCACLatestVersion.
class _ns1__downloadCACLatestVersion;

//  Forward declaration of class _ns1__downloadCACLatestVersionResponse.
class _ns1__downloadCACLatestVersionResponse;

//  Forward declaration of class _ns1__uploadCACHeartbeatInfo.
class _ns1__uploadCACHeartbeatInfo;

//  Forward declaration of class _ns1__uploadCACHeartbeatInfoResponse.
class _ns1__uploadCACHeartbeatInfoResponse;

//  Forward declaration of class _ns1__uploadCACConfig.
class _ns1__uploadCACConfig;

//  Forward declaration of class _ns1__uploadCACConfigResponse.
class _ns1__uploadCACConfigResponse;

//  Forward declaration of class _ns1__downloadCACHistoryVersion.
class _ns1__downloadCACHistoryVersion;

//  Forward declaration of class _ns1__downloadCACHistoryVersionResponse.
class _ns1__downloadCACHistoryVersionResponse;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://info.nari-china.com/CAG                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://info.nari-china.com/CAG                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://info.nari-china.com/CAG                                           *
 *                                                                            *
\******************************************************************************/



/// Top-level root element "http://info.nari-china.com/CAG":uploadCACData

/// "http://info.nari-china.com/CAG":uploadCACData is a complexType.
/// class _ns1__uploadCACData operations:
/// - soap_new__ns1__uploadCACData(soap*) allocate
/// - soap_new__ns1__uploadCACData(soap*, int num) allocate array
/// - soap_new_req__ns1__uploadCACData(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__uploadCACData(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__uploadCACData(soap*, _ns1__uploadCACData*) deserialize from a stream
/// - int soap_write__ns1__uploadCACData(soap, _ns1__uploadCACData*) serialize to a stream
class _ns1__uploadCACData
{ public:
/// Element in0 of type xs:string.
    std::string*                         in0                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://info.nari-china.com/CAG":uploadCACDataResponse

/// "http://info.nari-china.com/CAG":uploadCACDataResponse is a complexType.
/// class _ns1__uploadCACDataResponse operations:
/// - soap_new__ns1__uploadCACDataResponse(soap*) allocate
/// - soap_new__ns1__uploadCACDataResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__uploadCACDataResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__uploadCACDataResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__uploadCACDataResponse(soap*, _ns1__uploadCACDataResponse*) deserialize from a stream
/// - int soap_write__ns1__uploadCACDataResponse(soap, _ns1__uploadCACDataResponse*) serialize to a stream
class _ns1__uploadCACDataResponse
{ public:
/// Element out of type xs:string.
    std::string*                         out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://info.nari-china.com/CAG":downloadCACUpdateFile

/// "http://info.nari-china.com/CAG":downloadCACUpdateFile is a complexType.
/// class _ns1__downloadCACUpdateFile operations:
/// - soap_new__ns1__downloadCACUpdateFile(soap*) allocate
/// - soap_new__ns1__downloadCACUpdateFile(soap*, int num) allocate array
/// - soap_new_req__ns1__downloadCACUpdateFile(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__downloadCACUpdateFile(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__downloadCACUpdateFile(soap*, _ns1__downloadCACUpdateFile*) deserialize from a stream
/// - int soap_write__ns1__downloadCACUpdateFile(soap, _ns1__downloadCACUpdateFile*) serialize to a stream
class _ns1__downloadCACUpdateFile
{ public:
/// Element in0 of type xs:string.
    std::string*                         in0                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://info.nari-china.com/CAG":downloadCACUpdateFileResponse

/// "http://info.nari-china.com/CAG":downloadCACUpdateFileResponse is a complexType.
/// class _ns1__downloadCACUpdateFileResponse operations:
/// - soap_new__ns1__downloadCACUpdateFileResponse(soap*) allocate
/// - soap_new__ns1__downloadCACUpdateFileResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__downloadCACUpdateFileResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__downloadCACUpdateFileResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__downloadCACUpdateFileResponse(soap*, _ns1__downloadCACUpdateFileResponse*) deserialize from a stream
/// - int soap_write__ns1__downloadCACUpdateFileResponse(soap, _ns1__downloadCACUpdateFileResponse*) serialize to a stream
class _ns1__downloadCACUpdateFileResponse
{ public:
/// Element out of type xs:string.
    std::string*                         out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://info.nari-china.com/CAG":downloadCACLatestVersion

/// "http://info.nari-china.com/CAG":downloadCACLatestVersion is a complexType.
/// class _ns1__downloadCACLatestVersion operations:
/// - soap_new__ns1__downloadCACLatestVersion(soap*) allocate
/// - soap_new__ns1__downloadCACLatestVersion(soap*, int num) allocate array
/// - soap_new_req__ns1__downloadCACLatestVersion(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__downloadCACLatestVersion(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__downloadCACLatestVersion(soap*, _ns1__downloadCACLatestVersion*) deserialize from a stream
/// - int soap_write__ns1__downloadCACLatestVersion(soap, _ns1__downloadCACLatestVersion*) serialize to a stream
class _ns1__downloadCACLatestVersion
{ public:
/// Element in0 of type xs:string.
    std::string*                         in0                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://info.nari-china.com/CAG":downloadCACLatestVersionResponse

/// "http://info.nari-china.com/CAG":downloadCACLatestVersionResponse is a complexType.
/// class _ns1__downloadCACLatestVersionResponse operations:
/// - soap_new__ns1__downloadCACLatestVersionResponse(soap*) allocate
/// - soap_new__ns1__downloadCACLatestVersionResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__downloadCACLatestVersionResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__downloadCACLatestVersionResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__downloadCACLatestVersionResponse(soap*, _ns1__downloadCACLatestVersionResponse*) deserialize from a stream
/// - int soap_write__ns1__downloadCACLatestVersionResponse(soap, _ns1__downloadCACLatestVersionResponse*) serialize to a stream
class _ns1__downloadCACLatestVersionResponse
{ public:
/// Element out of type xs:string.
    std::string*                         out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://info.nari-china.com/CAG":uploadCACHeartbeatInfo

/// "http://info.nari-china.com/CAG":uploadCACHeartbeatInfo is a complexType.
/// class _ns1__uploadCACHeartbeatInfo operations:
/// - soap_new__ns1__uploadCACHeartbeatInfo(soap*) allocate
/// - soap_new__ns1__uploadCACHeartbeatInfo(soap*, int num) allocate array
/// - soap_new_req__ns1__uploadCACHeartbeatInfo(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__uploadCACHeartbeatInfo(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__uploadCACHeartbeatInfo(soap*, _ns1__uploadCACHeartbeatInfo*) deserialize from a stream
/// - int soap_write__ns1__uploadCACHeartbeatInfo(soap, _ns1__uploadCACHeartbeatInfo*) serialize to a stream
class _ns1__uploadCACHeartbeatInfo
{ public:
/// Element in0 of type xs:string.
    std::string*                         in0                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://info.nari-china.com/CAG":uploadCACHeartbeatInfoResponse

/// "http://info.nari-china.com/CAG":uploadCACHeartbeatInfoResponse is a complexType.
/// class _ns1__uploadCACHeartbeatInfoResponse operations:
/// - soap_new__ns1__uploadCACHeartbeatInfoResponse(soap*) allocate
/// - soap_new__ns1__uploadCACHeartbeatInfoResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__uploadCACHeartbeatInfoResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__uploadCACHeartbeatInfoResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__uploadCACHeartbeatInfoResponse(soap*, _ns1__uploadCACHeartbeatInfoResponse*) deserialize from a stream
/// - int soap_write__ns1__uploadCACHeartbeatInfoResponse(soap, _ns1__uploadCACHeartbeatInfoResponse*) serialize to a stream
class _ns1__uploadCACHeartbeatInfoResponse
{ public:
/// Element out of type xs:string.
    std::string*                         out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://info.nari-china.com/CAG":uploadCACConfig

/// "http://info.nari-china.com/CAG":uploadCACConfig is a complexType.
/// class _ns1__uploadCACConfig operations:
/// - soap_new__ns1__uploadCACConfig(soap*) allocate
/// - soap_new__ns1__uploadCACConfig(soap*, int num) allocate array
/// - soap_new_req__ns1__uploadCACConfig(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__uploadCACConfig(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__uploadCACConfig(soap*, _ns1__uploadCACConfig*) deserialize from a stream
/// - int soap_write__ns1__uploadCACConfig(soap, _ns1__uploadCACConfig*) serialize to a stream
class _ns1__uploadCACConfig
{ public:
/// Element in0 of type xs:string.
    std::string*                         in0                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://info.nari-china.com/CAG":uploadCACConfigResponse

/// "http://info.nari-china.com/CAG":uploadCACConfigResponse is a complexType.
/// class _ns1__uploadCACConfigResponse operations:
/// - soap_new__ns1__uploadCACConfigResponse(soap*) allocate
/// - soap_new__ns1__uploadCACConfigResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__uploadCACConfigResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__uploadCACConfigResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__uploadCACConfigResponse(soap*, _ns1__uploadCACConfigResponse*) deserialize from a stream
/// - int soap_write__ns1__uploadCACConfigResponse(soap, _ns1__uploadCACConfigResponse*) serialize to a stream
class _ns1__uploadCACConfigResponse
{ public:
/// Element out of type xs:string.
    std::string*                         out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://info.nari-china.com/CAG":downloadCACHistoryVersion

/// "http://info.nari-china.com/CAG":downloadCACHistoryVersion is a complexType.
/// class _ns1__downloadCACHistoryVersion operations:
/// - soap_new__ns1__downloadCACHistoryVersion(soap*) allocate
/// - soap_new__ns1__downloadCACHistoryVersion(soap*, int num) allocate array
/// - soap_new_req__ns1__downloadCACHistoryVersion(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__downloadCACHistoryVersion(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__downloadCACHistoryVersion(soap*, _ns1__downloadCACHistoryVersion*) deserialize from a stream
/// - int soap_write__ns1__downloadCACHistoryVersion(soap, _ns1__downloadCACHistoryVersion*) serialize to a stream
class _ns1__downloadCACHistoryVersion
{ public:
/// Element in0 of type xs:string.
    std::string*                         in0                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://info.nari-china.com/CAG":downloadCACHistoryVersionResponse

/// "http://info.nari-china.com/CAG":downloadCACHistoryVersionResponse is a complexType.
/// class _ns1__downloadCACHistoryVersionResponse operations:
/// - soap_new__ns1__downloadCACHistoryVersionResponse(soap*) allocate
/// - soap_new__ns1__downloadCACHistoryVersionResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__downloadCACHistoryVersionResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__downloadCACHistoryVersionResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__downloadCACHistoryVersionResponse(soap*, _ns1__downloadCACHistoryVersionResponse*) deserialize from a stream
/// - int soap_write__ns1__downloadCACHistoryVersionResponse(soap, _ns1__downloadCACHistoryVersionResponse*) serialize to a stream
class _ns1__downloadCACHistoryVersionResponse
{ public:
/// Element out of type xs:string.
    std::string*                         out                            1;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://info.nari-china.com/CAG                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://info.nari-china.com/CAG                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://info.nari-china.com/CAG                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://info.nari-china.com/CAG                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://info.nari-china.com/CAG                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	CAGAccessServiceHttpBinding 
//gsoap ns1  service type:	CAGAccessServicePortType 
//gsoap ns1  service port:	http://10.162.211.23/TRANSFCAG/services/CAGAccessService 
//gsoap ns1  service namespace:	http://info.nari-china.com/CAG 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref CAGAccessServiceHttpBinding

@section Service_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page CAGAccessServiceHttpBinding Binding "CAGAccessServiceHttpBinding"

@section CAGAccessServiceHttpBinding_operations Operations of Binding  "CAGAccessServiceHttpBinding"

  - @ref __ns1__uploadCACData

  - @ref __ns1__downloadCACUpdateFile

  - @ref __ns1__downloadCACLatestVersion

  - @ref __ns1__uploadCACHeartbeatInfo

  - @ref __ns1__uploadCACConfig

  - @ref __ns1__downloadCACHistoryVersion

@section CAGAccessServiceHttpBinding_ports Endpoints of Binding  "CAGAccessServiceHttpBinding"

  - http://10.162.211.23/TRANSFCAG/services/CAGAccessService

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   CAGAccessServiceHttpBinding                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__uploadCACData                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__uploadCACData" of service binding "CAGAccessServiceHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://info.nari-china.com/CAG/CAGAccessServicePortType/uploadCACDataRequest"

  - Addressing input output action: "http://info.nari-china.com/CAG/CAGAccessServicePortType/uploadCACDataResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__uploadCACData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__uploadCACData*                ns1__uploadCACData,
    // output parameters:
    _ns1__uploadCACDataResponse*        ns1__uploadCACDataResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__uploadCACData(
    struct soap *soap,
    // input parameters:
    _ns1__uploadCACData*                ns1__uploadCACData,
    // output parameters:
    _ns1__uploadCACDataResponse*        ns1__uploadCACDataResponse
  );
@endcode

C++ proxy class (defined in soapCAGAccessServiceHttpBindingProxy.h):
@code
  class CAGAccessServiceHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCAGAccessServiceHttpBindingService.h):
@code
  class CAGAccessServiceHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	uploadCACData SOAP
//gsoap ns1  service method-style:	uploadCACData document
//gsoap ns1  service method-encoding:	uploadCACData literal
//gsoap ns1  service method-action:	uploadCACData ""
//gsoap ns1  service method-output-action:	uploadCACData http://info.nari-china.com/CAG/CAGAccessServicePortType/uploadCACDataResponse
int __ns1__uploadCACData(
    _ns1__uploadCACData*                ns1__uploadCACData,	///< Input parameter
    _ns1__uploadCACDataResponse*        ns1__uploadCACDataResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__downloadCACUpdateFile                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__downloadCACUpdateFile" of service binding "CAGAccessServiceHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://info.nari-china.com/CAG/CAGAccessServicePortType/downloadCACUpdateFileRequest"

  - Addressing input output action: "http://info.nari-china.com/CAG/CAGAccessServicePortType/downloadCACUpdateFileResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__downloadCACUpdateFile(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__downloadCACUpdateFile*        ns1__downloadCACUpdateFile,
    // output parameters:
    _ns1__downloadCACUpdateFileResponse* ns1__downloadCACUpdateFileResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__downloadCACUpdateFile(
    struct soap *soap,
    // input parameters:
    _ns1__downloadCACUpdateFile*        ns1__downloadCACUpdateFile,
    // output parameters:
    _ns1__downloadCACUpdateFileResponse* ns1__downloadCACUpdateFileResponse
  );
@endcode

C++ proxy class (defined in soapCAGAccessServiceHttpBindingProxy.h):
@code
  class CAGAccessServiceHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCAGAccessServiceHttpBindingService.h):
@code
  class CAGAccessServiceHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	downloadCACUpdateFile SOAP
//gsoap ns1  service method-style:	downloadCACUpdateFile document
//gsoap ns1  service method-encoding:	downloadCACUpdateFile literal
//gsoap ns1  service method-action:	downloadCACUpdateFile ""
//gsoap ns1  service method-output-action:	downloadCACUpdateFile http://info.nari-china.com/CAG/CAGAccessServicePortType/downloadCACUpdateFileResponse
int __ns1__downloadCACUpdateFile(
    _ns1__downloadCACUpdateFile*        ns1__downloadCACUpdateFile,	///< Input parameter
    _ns1__downloadCACUpdateFileResponse* ns1__downloadCACUpdateFileResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__downloadCACLatestVersion                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__downloadCACLatestVersion" of service binding "CAGAccessServiceHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://info.nari-china.com/CAG/CAGAccessServicePortType/downloadCACLatestVersionRequest"

  - Addressing input output action: "http://info.nari-china.com/CAG/CAGAccessServicePortType/downloadCACLatestVersionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__downloadCACLatestVersion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__downloadCACLatestVersion*     ns1__downloadCACLatestVersion,
    // output parameters:
    _ns1__downloadCACLatestVersionResponse* ns1__downloadCACLatestVersionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__downloadCACLatestVersion(
    struct soap *soap,
    // input parameters:
    _ns1__downloadCACLatestVersion*     ns1__downloadCACLatestVersion,
    // output parameters:
    _ns1__downloadCACLatestVersionResponse* ns1__downloadCACLatestVersionResponse
  );
@endcode

C++ proxy class (defined in soapCAGAccessServiceHttpBindingProxy.h):
@code
  class CAGAccessServiceHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCAGAccessServiceHttpBindingService.h):
@code
  class CAGAccessServiceHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	downloadCACLatestVersion SOAP
//gsoap ns1  service method-style:	downloadCACLatestVersion document
//gsoap ns1  service method-encoding:	downloadCACLatestVersion literal
//gsoap ns1  service method-action:	downloadCACLatestVersion ""
//gsoap ns1  service method-output-action:	downloadCACLatestVersion http://info.nari-china.com/CAG/CAGAccessServicePortType/downloadCACLatestVersionResponse
int __ns1__downloadCACLatestVersion(
    _ns1__downloadCACLatestVersion*     ns1__downloadCACLatestVersion,	///< Input parameter
    _ns1__downloadCACLatestVersionResponse* ns1__downloadCACLatestVersionResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__uploadCACHeartbeatInfo                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__uploadCACHeartbeatInfo" of service binding "CAGAccessServiceHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://info.nari-china.com/CAG/CAGAccessServicePortType/uploadCACHeartbeatInfoRequest"

  - Addressing input output action: "http://info.nari-china.com/CAG/CAGAccessServicePortType/uploadCACHeartbeatInfoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__uploadCACHeartbeatInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__uploadCACHeartbeatInfo*       ns1__uploadCACHeartbeatInfo,
    // output parameters:
    _ns1__uploadCACHeartbeatInfoResponse* ns1__uploadCACHeartbeatInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__uploadCACHeartbeatInfo(
    struct soap *soap,
    // input parameters:
    _ns1__uploadCACHeartbeatInfo*       ns1__uploadCACHeartbeatInfo,
    // output parameters:
    _ns1__uploadCACHeartbeatInfoResponse* ns1__uploadCACHeartbeatInfoResponse
  );
@endcode

C++ proxy class (defined in soapCAGAccessServiceHttpBindingProxy.h):
@code
  class CAGAccessServiceHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCAGAccessServiceHttpBindingService.h):
@code
  class CAGAccessServiceHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	uploadCACHeartbeatInfo SOAP
//gsoap ns1  service method-style:	uploadCACHeartbeatInfo document
//gsoap ns1  service method-encoding:	uploadCACHeartbeatInfo literal
//gsoap ns1  service method-action:	uploadCACHeartbeatInfo ""
//gsoap ns1  service method-output-action:	uploadCACHeartbeatInfo http://info.nari-china.com/CAG/CAGAccessServicePortType/uploadCACHeartbeatInfoResponse
int __ns1__uploadCACHeartbeatInfo(
    _ns1__uploadCACHeartbeatInfo*       ns1__uploadCACHeartbeatInfo,	///< Input parameter
    _ns1__uploadCACHeartbeatInfoResponse* ns1__uploadCACHeartbeatInfoResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__uploadCACConfig                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__uploadCACConfig" of service binding "CAGAccessServiceHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://info.nari-china.com/CAG/CAGAccessServicePortType/uploadCACConfigRequest"

  - Addressing input output action: "http://info.nari-china.com/CAG/CAGAccessServicePortType/uploadCACConfigResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__uploadCACConfig(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__uploadCACConfig*              ns1__uploadCACConfig,
    // output parameters:
    _ns1__uploadCACConfigResponse*      ns1__uploadCACConfigResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__uploadCACConfig(
    struct soap *soap,
    // input parameters:
    _ns1__uploadCACConfig*              ns1__uploadCACConfig,
    // output parameters:
    _ns1__uploadCACConfigResponse*      ns1__uploadCACConfigResponse
  );
@endcode

C++ proxy class (defined in soapCAGAccessServiceHttpBindingProxy.h):
@code
  class CAGAccessServiceHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCAGAccessServiceHttpBindingService.h):
@code
  class CAGAccessServiceHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	uploadCACConfig SOAP
//gsoap ns1  service method-style:	uploadCACConfig document
//gsoap ns1  service method-encoding:	uploadCACConfig literal
//gsoap ns1  service method-action:	uploadCACConfig ""
//gsoap ns1  service method-output-action:	uploadCACConfig http://info.nari-china.com/CAG/CAGAccessServicePortType/uploadCACConfigResponse
int __ns1__uploadCACConfig(
    _ns1__uploadCACConfig*              ns1__uploadCACConfig,	///< Input parameter
    _ns1__uploadCACConfigResponse*      ns1__uploadCACConfigResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__downloadCACHistoryVersion                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__downloadCACHistoryVersion" of service binding "CAGAccessServiceHttpBinding"

/**

Operation details:

  - SOAP document/literal style messaging

  - Addressing input action: "http://info.nari-china.com/CAG/CAGAccessServicePortType/downloadCACHistoryVersionRequest"

  - Addressing input output action: "http://info.nari-china.com/CAG/CAGAccessServicePortType/downloadCACHistoryVersionResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__downloadCACHistoryVersion(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__downloadCACHistoryVersion*    ns1__downloadCACHistoryVersion,
    // output parameters:
    _ns1__downloadCACHistoryVersionResponse* ns1__downloadCACHistoryVersionResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__downloadCACHistoryVersion(
    struct soap *soap,
    // input parameters:
    _ns1__downloadCACHistoryVersion*    ns1__downloadCACHistoryVersion,
    // output parameters:
    _ns1__downloadCACHistoryVersionResponse* ns1__downloadCACHistoryVersionResponse
  );
@endcode

C++ proxy class (defined in soapCAGAccessServiceHttpBindingProxy.h):
@code
  class CAGAccessServiceHttpBindingProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCAGAccessServiceHttpBindingService.h):
@code
  class CAGAccessServiceHttpBindingService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	downloadCACHistoryVersion SOAP
//gsoap ns1  service method-style:	downloadCACHistoryVersion document
//gsoap ns1  service method-encoding:	downloadCACHistoryVersion literal
//gsoap ns1  service method-action:	downloadCACHistoryVersion ""
//gsoap ns1  service method-output-action:	downloadCACHistoryVersion http://info.nari-china.com/CAG/CAGAccessServicePortType/downloadCACHistoryVersionResponse
int __ns1__downloadCACHistoryVersion(
    _ns1__downloadCACHistoryVersion*    ns1__downloadCACHistoryVersion,	///< Input parameter
    _ns1__downloadCACHistoryVersionResponse* ns1__downloadCACHistoryVersionResponse	///< Output parameter
);

/**

@page CAGAccessServiceHttpBinding Binding "CAGAccessServiceHttpBinding"

@section CAGAccessServiceHttpBinding_policy_enablers Policy Enablers of Binding  "CAGAccessServiceHttpBinding"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns1 Top-level root elements of schema "http://info.nari-china.com/CAG"

  - <ns1:uploadCACData> @ref _ns1__uploadCACData
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__uploadCACData(struct soap*, _ns1__uploadCACData*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__uploadCACData(struct soap*, _ns1__uploadCACData*);
    @endcode

  - <ns1:uploadCACDataResponse> @ref _ns1__uploadCACDataResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__uploadCACDataResponse(struct soap*, _ns1__uploadCACDataResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__uploadCACDataResponse(struct soap*, _ns1__uploadCACDataResponse*);
    @endcode

  - <ns1:downloadCACUpdateFile> @ref _ns1__downloadCACUpdateFile
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__downloadCACUpdateFile(struct soap*, _ns1__downloadCACUpdateFile*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__downloadCACUpdateFile(struct soap*, _ns1__downloadCACUpdateFile*);
    @endcode

  - <ns1:downloadCACUpdateFileResponse> @ref _ns1__downloadCACUpdateFileResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__downloadCACUpdateFileResponse(struct soap*, _ns1__downloadCACUpdateFileResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__downloadCACUpdateFileResponse(struct soap*, _ns1__downloadCACUpdateFileResponse*);
    @endcode

  - <ns1:downloadCACLatestVersion> @ref _ns1__downloadCACLatestVersion
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__downloadCACLatestVersion(struct soap*, _ns1__downloadCACLatestVersion*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__downloadCACLatestVersion(struct soap*, _ns1__downloadCACLatestVersion*);
    @endcode

  - <ns1:downloadCACLatestVersionResponse> @ref _ns1__downloadCACLatestVersionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__downloadCACLatestVersionResponse(struct soap*, _ns1__downloadCACLatestVersionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__downloadCACLatestVersionResponse(struct soap*, _ns1__downloadCACLatestVersionResponse*);
    @endcode

  - <ns1:uploadCACHeartbeatInfo> @ref _ns1__uploadCACHeartbeatInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__uploadCACHeartbeatInfo(struct soap*, _ns1__uploadCACHeartbeatInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__uploadCACHeartbeatInfo(struct soap*, _ns1__uploadCACHeartbeatInfo*);
    @endcode

  - <ns1:uploadCACHeartbeatInfoResponse> @ref _ns1__uploadCACHeartbeatInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__uploadCACHeartbeatInfoResponse(struct soap*, _ns1__uploadCACHeartbeatInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__uploadCACHeartbeatInfoResponse(struct soap*, _ns1__uploadCACHeartbeatInfoResponse*);
    @endcode

  - <ns1:uploadCACConfig> @ref _ns1__uploadCACConfig
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__uploadCACConfig(struct soap*, _ns1__uploadCACConfig*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__uploadCACConfig(struct soap*, _ns1__uploadCACConfig*);
    @endcode

  - <ns1:uploadCACConfigResponse> @ref _ns1__uploadCACConfigResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__uploadCACConfigResponse(struct soap*, _ns1__uploadCACConfigResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__uploadCACConfigResponse(struct soap*, _ns1__uploadCACConfigResponse*);
    @endcode

  - <ns1:downloadCACHistoryVersion> @ref _ns1__downloadCACHistoryVersion
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__downloadCACHistoryVersion(struct soap*, _ns1__downloadCACHistoryVersion*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__downloadCACHistoryVersion(struct soap*, _ns1__downloadCACHistoryVersion*);
    @endcode

  - <ns1:downloadCACHistoryVersionResponse> @ref _ns1__downloadCACHistoryVersionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__downloadCACHistoryVersionResponse(struct soap*, _ns1__downloadCACHistoryVersionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__downloadCACHistoryVersionResponse(struct soap*, _ns1__downloadCACHistoryVersionResponse*);
    @endcode

@section ns1 Top-level root elements of schema "http://info.nari-china.com/CAG"

*/

/* End of CAGAccessService.h */
